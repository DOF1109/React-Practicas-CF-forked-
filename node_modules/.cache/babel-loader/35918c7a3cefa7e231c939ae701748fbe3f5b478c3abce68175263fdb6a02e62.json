{"ast":null,"code":"import _slicedToArray from \"R:/React/Proyectos/React-Practicas-CF-forked-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"R:\\\\React\\\\Proyectos\\\\React-Practicas-CF-forked-\\\\src\\\\components\\\\countDown\\\\CountDown.jsx\",\n  _s = $RefreshSig$();\n// Componente de cuenta regresiva\n\nimport './CountDown.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CountDown(props) {\n  _s();\n  // Segundos objetivo del usuario\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    targetSeconds = _useState2[0],\n    setTargetSeconds = _useState2[1];\n  // Segundos que transcurrieron\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    elapsedSeconds = _useState4[0],\n    setElapsedSeconds = _useState4[1];\n  var parseForm = function parseForm(e) {\n    // Desactivo la accion por defecto\n    e.preventDefault();\n    // Obtengo los segundos que ingresó\n    var seconds = e.target.seconds.value;\n    setTargetSeconds(parseInt(seconds));\n  };\n  useEffect(function () {\n    if (targetSeconds === null) return;\n\n    // Si el usuarió ingreso un valor\n    setElapsedSeconds(0);\n    var interval = setInterval(function () {\n      // Paso el estado a su función de seteo para evitar errores\n      setElapsedSeconds(function (elapsedSeconds) {\n        return elapsedSeconds + 1;\n      });\n    }, 1000);\n    // Limpio el intervalo en el efecto, se ejecuta al\n    // desmontar el componente\n    return function () {\n      clearInterval(interval);\n    };\n  }, [targetSeconds]);\n  if (targetSeconds) {\n    if (elapsedSeconds >= targetSeconds) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"white\",\n          children: \"\\xA1Termin\\xF3!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Reiniciar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"white\",\n      children: [\"Quedan \", targetSeconds - elapsedSeconds, \" segundos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"white\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xBFCu\\xE1ntos segundos quieres contar?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      onSubmit: parseForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Iniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(CountDown, \"qhPpq7C7GHvtgJhzYDWuOOiUses=\");\n_c = CountDown;\nexport default CountDown;\nvar _c;\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CountDown","props","_s","_useState","_useState2","_slicedToArray","targetSeconds","setTargetSeconds","_useState3","_useState4","elapsedSeconds","setElapsedSeconds","parseForm","e","preventDefault","seconds","target","value","parseInt","interval","setInterval","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","type","name","_c","$RefreshReg$"],"sources":["R:/React/Proyectos/React-Practicas-CF-forked-/src/components/countDown/CountDown.jsx"],"sourcesContent":["// Componente de cuenta regresiva\r\n\r\nimport './CountDown.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction CountDown(props) {\r\n    // Segundos objetivo del usuario\r\n    const [targetSeconds, setTargetSeconds] = useState(null);\r\n    // Segundos que transcurrieron\r\n    const [elapsedSeconds, setElapsedSeconds] = useState(0);\r\n\r\n    const parseForm = (e) => {\r\n        // Desactivo la accion por defecto\r\n        e.preventDefault();\r\n        // Obtengo los segundos que ingresó\r\n        let seconds = e.target.seconds.value;\r\n        setTargetSeconds(parseInt(seconds));\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (targetSeconds === null) return;\r\n\r\n        // Si el usuarió ingreso un valor\r\n        setElapsedSeconds(0);\r\n        let interval = setInterval( () => {\r\n            // Paso el estado a su función de seteo para evitar errores\r\n            setElapsedSeconds( (elapsedSeconds) => elapsedSeconds + 1);\r\n        }, 1000 );\r\n        // Limpio el intervalo en el efecto, se ejecuta al\r\n        // desmontar el componente\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n\r\n    }, [targetSeconds]);\r\n\r\n    if (targetSeconds) {\r\n        if (elapsedSeconds >= targetSeconds) {\r\n            return (\r\n                <>\r\n                    <p className='white'>\r\n                        ¡Terminó!\r\n                    </p>\r\n                    <button>\r\n                        Reiniciar</button>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <p className='white'>\r\n                Quedan {targetSeconds - elapsedSeconds} segundos\r\n            </p>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"white\">\r\n            <p>\r\n                ¿Cuántos segundos quieres contar?\r\n            </p>\r\n            <form action=\"#\" onSubmit={parseForm}>\r\n                <input type=\"number\" name=\"seconds\" />\r\n                <button>Iniciar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CountDown;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}